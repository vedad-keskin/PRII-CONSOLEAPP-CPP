#include <iostream>
using namespace std;

char* GetNizKaraktera(const char* tekst) {
	if (tekst == nullptr)
		return nullptr;
	int vel = strlen(tekst) + 1;
	char* novi = new char[vel];
	strcpy_s(novi, vel, tekst);
	return novi;
}


template<class T>
class Kolekcija
{
public:
	T* _niz;
	int _max;
	int _trenutno;

	Kolekcija(int max = 10) {
	
	}

	

	


	~Kolekcija() {
		
	}

	friend ostream& operator << (ostream& COUT, const Kolekcija& obj) {
		
		return COUT;
	}

	void AddElement(T el) {
	}


	bool ukloni() {
		//uklanja zadnji element iz niza
	}


	bool RemoveAt(int lokacija) {
		//uklanja element na određenoj poziciji
	}

	bool RemoveAt(T el) {
		//Uklanja element koji je jednak proslijeđenom
	}


	bool prazan() {
		//vrši provjeru da li je niz prazan
	}



	T* GetNajmanjiElement() {
		//vraća najmanji element iz niza i to kao pokazivač
	}





};

class Zivotinja
{
private:
	char* _vrsta;
	int _tezina;
public:


	Zivotinja(const char* vrsta = "---", int tezina = 0) {
		_vrsta = GetNizKaraktera(vrsta);
		_tezina = tezina;
	}


	//konstruktor kopije

	//operator < koji poredi dvije životinje po težini

	//operator =

	//operator ==

	//operator<< koji ispisuje vrstu i težinu životinje

};

void main() {
    




	system("pause>0");
}
