#include <iostream>
using namespace std;

template<class T>
class Kolekcija {
public:
    T* _elementi;
    int _max;
    int _trenutno;

    // Potrebne kontruktore, destruktor i operatore

    // Operator += koji ima za cilj dodati novi element u kolekciju.
    // Onemoguciti dodavanje istih elemenata. Baciti izuzetak tipa exception, ukoliko 
    // nije moguce dodati vise elemenata ili element vec postoji.
    // Nije potrebno raditi prosirivanje kolekcije.

    // Operator -= koji ima za cilj ukloniti odredjeni element iz kolekcije.
    // Ako element nije pronadjen, baciti izuzetak tipa exception.

    // Operator [] dvije verzije
    // Treba da pronadje i vrati trazeni element. Ako element ne postoji, baciti izuzetak tipa exception
    T& operator[] (T el) {
    }

    T& operator[] (int pozicija) {

    }

    // operator <<
};

class Artikal
{
public:
    char* _kod;
    char* _naziv;
    float _cijena;
    int _kolicinaNaSkladistu;

    // Potrebne kontruktore, destruktor i operatore
};

class PrehrambeniArtikal : public Artikal
{
public:
    float _gramaza;
    // Potrebne kontruktore, destruktor i operatore

};

class Odjeca : public Artikal
{
public:
    char* _velicina; // xs, s, m, l, xl ...
    char* _materijal;

    // Potrebne kontruktore, destruktor i operatore

};

class Prodavnica
{
public:
    char* _naziv;
    char* _adresa;

    Kolekcija<Odjeca> _odjeca;
    Kolekcija<PrehrambeniArtikal> _prehrana;

    // Konstruktore, destruktore

    bool DodajOdjecu(Odjeca o)
    {
        // Funkcija ima za cilj dodati novi komad odjece
        // Onemoguciti dodavanje dva ista komada.
    }

    bool DodajPrehrambeniArtikal(PrehrambeniArtikal p)
    {
        // Funkcija ima za cilj dodati novi prehrambeni artikl
        // Onemoguciti dodavanje dva ista komada 
    }

    bool UvecajStanjeNaSkladistu(PrehrambeniArtikal p)
    {
        // Funkcija ima za cilj da uveca stanje na skladistu za proslijedjeni artikal
        // Ako proslijedjeni artikal ne postoji funkcija vraca false, inace uvecava stanje na skladistu
        // te vraca true
    }

    bool UvecajStanjeNaSkladistu(Odjeca o)
    {
        // Funkcija ima za cilj da uveca stanje na skladistu za proslijedjeni artikal
        // Ako proslijedjeni artikal ne postoji funkcija vraca false, inace uvecava stanje na skladistu
        // te vraca true
    }

    bool UmanjiStanjeNaSkladistu(PrehrambeniArtikal p)
    {
        // Funkcija ima za cilj da umanji stanje na skladistu za proslijedjeni artikal
        // Ako proslijedjeni artikal ne postoji funkcija vraca false, inace uvecava stanje na skladistu
        // te vraca true
    }

    bool UmanjiStanjeNaSkladistu(Odjeca o)
    {
        // Funkcija ima za cilj da umanji stanje na skladistu za proslijedjeni artikal
        // Ako proslijedjeni artikal ne postoji funkcija vraca false, inace uvecava stanje na skladistu
        // te vraca true
    }
};

void main()
{



}
